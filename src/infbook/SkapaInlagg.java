/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package infbook;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Tomasz
 */
public class SkapaInlagg extends javax.swing.JFrame {

    private DefaultListModel lista;
    private Connection connection;
    private String s = null;
    private String angivetAnv;
    private File selectedFile;
    private String path;
    private String extension;
    private boolean skapatInlagg;
    JFileChooser file = new JFileChooser();

    /**
     * Creates new form SkapaInlagg
     */
    public SkapaInlagg(Connection connection, String angivetAnv) {
        this.connection = connection;

        skapatInlagg = false;
        initComponents();
        this.setResizable(false);
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        txaInlagg.setLineWrap(true);
        this.angivetAnv = angivetAnv;
        fyllComboBoxSuperkategori();
        lista = new DefaultListModel();
        lblBild.setBounds(10, 10, 60, 60);
        btnBifogaFiler.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                file.setCurrentDirectory(new File(System.getProperty("user.home")));
                FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "gif", "png");
                file.addChoosableFileFilter(filter);
                int result = file.showSaveDialog(null);

                if (result == JFileChooser.APPROVE_OPTION) {
                    selectedFile = file.getSelectedFile();
                    path = selectedFile.getAbsolutePath();

                    int i = path.lastIndexOf(".");

                    String nyPath = path.substring(i, i + 4);

                    lblBild.setText(nyPath);
                    Icon icon = javax.swing.filechooser.FileSystemView.getFileSystemView().getSystemIcon(selectedFile);
                    lblBild.setIcon(icon);

                    s = path;
                }

            }
        });

        lblBild.addMouseListener(new MouseListener() {

            public void mouseReleased(MouseEvent e) {

            }

            public void mousePressed(MouseEvent e) {
            }

            public void mouseExited(MouseEvent e) {
            }

            public void mouseEntered(MouseEvent e) {
            }

            public void mouseClicked(MouseEvent e) {
                File u = new File(path);
                try {

                    java.awt.Desktop.getDesktop().open(u);
                } catch (IOException ex) {
                    Logger.getLogger(SkapaInlagg.class.getName()).log(Level.SEVERE, null, ex);

                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitel = new javax.swing.JLabel();
        txtTitel = new javax.swing.JTextField();
        lblInlagg = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaInlagg = new javax.swing.JTextArea();
        btnBifogaFiler = new javax.swing.JButton();
        cmbSuperkategori = new javax.swing.JComboBox();
        lblSubkategori = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btnSkapaInlagg = new javax.swing.JButton();
        lblNotis = new javax.swing.JLabel();
        lblBild = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblTitel.setText("Titel");

        lblInlagg.setText("Inlägg");

        txaInlagg.setColumns(20);
        txaInlagg.setRows(5);
        jScrollPane1.setViewportView(txaInlagg);

        btnBifogaFiler.setText("Bifoga filer");
        btnBifogaFiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBifogaFilerActionPerformed(evt);
            }
        });

        cmbSuperkategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Välj Överkategori" }));
        cmbSuperkategori.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSuperkategoriItemStateChanged(evt);
            }
        });
        cmbSuperkategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSuperkategoriActionPerformed(evt);
            }
        });

        lblSubkategori.setText("Välj subkategori");

        jScrollPane2.setViewportView(jList1);

        btnSkapaInlagg.setText("Skapa inlägg");
        btnSkapaInlagg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkapaInlaggActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/infbook.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(btnSkapaInlagg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNotis, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSubkategori)
                            .addComponent(lblInlagg)
                            .addComponent(lblTitel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbSuperkategori, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBifogaFiler))
                            .addComponent(jScrollPane1)
                            .addComponent(txtTitel, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(lblBild, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTitel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblBild, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblInlagg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSuperkategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBifogaFiler))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubkategori)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSkapaInlagg)
                    .addComponent(lblNotis, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public ImageIcon ResizeImage(String ImagePath) {

        ImageIcon myImage = new ImageIcon(ImagePath);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(lblBild.getWidth(), lblBild.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    private void skapaEttInlagg() throws FileNotFoundException {

        String valdSubkategori = (String) jList1.getSelectedValue();
        try {

            Statement stmt1 = connection.createStatement();

            ResultSet rs1 = stmt1.executeQuery("SELECT SUBKATEGORIID FROM SUBKATEGORI WHERE SKNAMN ='" + valdSubkategori + "' ");
            rs1.next();
            int subkategoriId = rs1.getInt("SUBKATEGORIID");

            Statement stmt100 = connection.createStatement();
            ResultSet rs100 = stmt100.executeQuery("SELECT SUPERKATEGORI FROM SUBKATEGORI WHERE SKNAMN='" + valdSubkategori + "'");
            rs100.next();
            int superkategori = rs100.getInt("SUPERKATEGORI");

            Statement stmt101 = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_READ_ONLY,
                    ResultSet.HOLD_CURSORS_OVER_COMMIT);

            Statement stmt102 = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_READ_ONLY,
                    ResultSet.HOLD_CURSORS_OVER_COMMIT);

            ResultSet sub = stmt101.executeQuery("SELECT MOBILNMR FROM ANVANDARE JOIN ANVANDARE_SUPERKATEGORI ON ANVANDARE_SUPERKATEGORI.ANVANDARE=ANVANDARE.PNR WHERE SUPERKATEGORIID=" + superkategori + " AND SMSNOTISER='JA'");

            ResultSet unsub = stmt102.executeQuery("SELECT MOBILNMR FROM ANVANDARE JOIN ANVANDARE_SUBKATEGORI ON ANVANDARE_SUBKATEGORI.ANVANDARE = ANVANDARE.PNR WHERE SUBKATEGORI =" + subkategoriId);

            ArrayList<String> unsubList = new ArrayList();

            while (unsub.next()) {
                //första värdet i tabellen hänger inte med, så den får vara en placeholder
                String unsubNummer = unsub.getString("MOBILNMR");
                unsubList.add(unsubNummer);
            }

            while (sub.next()) {
                //första mobilnummret hänger inte med, så den måste vara en placeholder
                boolean matchning = false;
                String mobilnmr = sub.getString("MOBILNMR");

                System.out.println("Första loopen sms: " + mobilnmr + "-----");

                for (String unsubNummer : unsubList) {

                    System.out.println("andra loopen sms:" + unsubNummer + "----");

                    if (mobilnmr.equals(unsubNummer)) {
                        matchning = true;
                        System.out.println("Följande nummer gjorde matchnign = true" + mobilnmr);
                    }
                }

                if (matchning == false) {

                    System.out.println("Meddelande skickas till " + mobilnmr);

                    SMSNotiser hej = new SMSNotiser();
                    hej.skickaNotis("Ett nytt inlägg har skapats i en kategori som du följer - InfBook", mobilnmr);
                }

            }

            Statement stmt103 = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_READ_ONLY,
                    ResultSet.HOLD_CURSORS_OVER_COMMIT);
            ResultSet subE = stmt103.executeQuery("SELECT EMAIL FROM ANVANDARE JOIN ANVANDARE_SUPERKATEGORI ON ANVANDARE_SUPERKATEGORI.ANVANDARE=ANVANDARE.PNR WHERE SUPERKATEGORIID=" + superkategori + " AND EMAILNOTISER='JA'");

            Statement stmt104 = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_READ_ONLY,
                    ResultSet.HOLD_CURSORS_OVER_COMMIT);
            ResultSet unsubE = stmt104.executeQuery("SELECT EMAIL FROM ANVANDARE JOIN ANVANDARE_SUBKATEGORI ON ANVANDARE_SUBKATEGORI.ANVANDARE = ANVANDARE.PNR WHERE SUBKATEGORI =" + subkategoriId);

            ArrayList<String> unsubEList = new ArrayList();

            while (unsubE.next()) {
                String unsubEpost = unsubE.getString("EMAIL");
                unsubEList.add(unsubEpost);
            }

            while (subE.next()) {

                boolean matchning = false;
                String subEpost = subE.getString("EMAIL");
                System.out.println("Första epost loopen innehåller: " + subEpost + "---------");

                for (String unsubEpostadress : unsubEList) {

                    System.out.println("Andra epost loopen innehåller: " + unsubEpostadress + "---------");

                    if (subEpost.equals(unsubEpostadress)) {

                        matchning = true;
                        System.out.println("Följande adressen gjorde matchning till true: " + subEpost);
                    }
                }

                if (matchning == false) {
                    System.out.println("Mailet skickades till: " + subEpost);
                    SendMail.send(subEpost, "Ett nytt inlägg i InfBook", "Ett nytt inlägg har skapats i en kategori som du följer.", "mail@infbook.page", "Infbook2019");
                }

            }

            Statement stmt2 = connection.createStatement();

            ResultSet rs2 = stmt2.executeQuery("SELECT FIRST 1  * FROM INLAGG ORDER BY INLAGGSID DESC");
            rs2.next();
            int hogstaVarde = rs2.getInt("INLAGGSID");
            int nyaVardet = hogstaVarde + 1;

            PreparedStatement ps2 = connection.prepareStatement("insert into INLAGG(INLAGGSID,TEXT,ANVANDARE,SUBKATEGORI,TITEL) values(?,?,?,?,?)");
            ps2.setInt(1, nyaVardet);
            ps2.setString(2, txaInlagg.getText());
            ps2.setString(3, angivetAnv);
            ps2.setInt(4, subkategoriId);
            ps2.setString(5, txtTitel.getText());
            ps2.executeUpdate();
            //JOptionPane.showMessageDialog(null, "Inlägget har skapats");
            lblNotis.setText("Inlägget har skapats!");
            Statement stmt3 = connection.createStatement();
            ResultSet rs3 = stmt3.executeQuery("SELECT FIRST 1  * FROM FILER ORDER BY FILID DESC");
            rs3.next();
            int hogstaVarde2 = rs3.getInt("FILID");
            int nyaVardet2 = hogstaVarde2 + 1;

            PreparedStatement ps3 = connection.prepareStatement("INSERT INTO FILER(FILID,FIL,TYP, INLAGG) VALUES (?,?,?, ?)");
            InputStream is = new FileInputStream(new File(s));
            selectedFile = file.getSelectedFile();
            path = selectedFile.getAbsolutePath();

            extension = "";

            int i = path.lastIndexOf(".");

            extension = path.substring(i, i + 4);

            ps3.setInt(1, nyaVardet2);
            ps3.setBlob(2, is);
            ps3.setString(3, extension);
            ps3.setInt(4, nyaVardet);
            ps3.executeUpdate();

        } catch (SQLException | NullPointerException ex) {
            System.out.println(ex.getMessage());
        }

    }

    private void fyllComboBoxSuperkategori() {
        Statement stmt;
        try {
            stmt = connection.createStatement();

            ResultSet rs = stmt.executeQuery("SELECT SKNAMN FROM SUPERKATEGORI");

            while (rs.next()) {

                cmbSuperkategori.addItem(rs.getString("SKNAMN"));
                //cmbSuperkategori.addItem("SKNAMN");

            }
        } catch (SQLException ex) {
            Logger.getLogger(SkapaInlagg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void fyllComboBoxSubkategori() {

        Statement stmt;
        try {
            stmt = connection.createStatement();
            Object valdSakObject = cmbSuperkategori.getSelectedItem();
            String superKategoriNamn = valdSakObject.toString();

            ResultSet rs2 = stmt.executeQuery("SELECT SUPERKATEGORIID FROM SUPERKATEGORI WHERE SKNAMN ='" + superKategoriNamn + "' ");
            rs2.next();
            int superkategoriId = rs2.getInt("SUPERKATEGORIID");

            ResultSet rs = stmt.executeQuery("SELECT SKNAMN FROM SUBKATEGORI WHERE SUPERKATEGORI = " + superkategoriId);

            while (rs.next()) {

                lista.addElement(rs.getString("SKNAMN"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(SkapaInlagg.class.getName()).log(Level.SEVERE, null, ex);
        }

        jList1.setModel(lista);

    }


    private void btnSkapaInlaggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkapaInlaggActionPerformed
        if (Validering.isTextFältTomt(txtTitel)
                && Validering.isTextAreaTomt(txaInlagg)
                && Validering.isJListTomt(jList1)){
                //&& Validering.isString(txtTitel)) {
            try {
                skapaEttInlagg();
                this.setVisible(false);
                
                skapatInlagg = true;
                

            } catch (FileNotFoundException ex) {
                Logger.getLogger(SkapaInlagg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSkapaInlaggActionPerformed

    private void cmbSuperkategoriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSuperkategoriItemStateChanged
//När ett item väljs, kommer sub-kategorierna populeras. 

        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSuperkategoriItemStateChanged

    private void cmbSuperkategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSuperkategoriActionPerformed
        lista.removeAllElements();
        fyllComboBoxSubkategori();

        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSuperkategoriActionPerformed

    private void btnBifogaFilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBifogaFilerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBifogaFilerActionPerformed

    public boolean getSkapatInlagg() {
        return skapatInlagg;
    }
    
    public void setSkapatInlagg(boolean status) {
        skapatInlagg = false;
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBifogaFiler;
    private javax.swing.JButton btnSkapaInlagg;
    private javax.swing.JComboBox cmbSuperkategori;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBild;
    private javax.swing.JLabel lblInlagg;
    private javax.swing.JLabel lblNotis;
    private javax.swing.JLabel lblSubkategori;
    private javax.swing.JLabel lblTitel;
    private javax.swing.JTextArea txaInlagg;
    private javax.swing.JTextField txtTitel;
    // End of variables declaration//GEN-END:variables
}
